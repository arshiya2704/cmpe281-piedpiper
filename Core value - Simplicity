Simple solutions are cheaper and quicker to implement than complex solutions. Therefore, XP always tries to find the simplest
solutions. We will follow the following principles: "Do the simplest thing that could possibly work" (DTSTTCPW) principle.Elsewhere
known as KISS (“Keep It Simple, Stupid!”). A coach may say DTSTTCPW when he sees an XP developer doing something needlessly
complicated. Also, YAGNI principle (''You ain’t gonna need it''), keep it to the point of interest. Simplicity and communication
support each other.

To be fair, this Value is a useful one, in the sense that it makes the programmer slam on the brakes before they write something
they don't need to. It's common sense to keep everything as simple as possible, i.e. never over-engineer. A common example is to
produce a "framework" due to some unknown, hypothetical future requirement. If the requirement isn't there now, don't code for it.

We will do what is needed and asked for, but no more. This will maximize the value created for the investment made to date. We will
take small simple steps to our goal and mitigate failures as they happen. We will create something we are proud of and maintain it
long term for reasonable costs.

Create something that you are proud of and maintain it for a long term for reasonable costs. Never implement a feature you do not need now.

During week one, Project team has shown simplicity in bringing new ideas to the project. The team came with an idea of gathering
user stories which can define our functional and non-functional requirement.

During second and third week, the team came up with solutions for building applications modules differently and we have followed simple approach of selecting each module according to team member's interest and in conflict, we have decided to meet and resolve it with respect. 

During fourth week, the team discussed the obstacles they were facing in implementation of database of choice. Further, in doubt we have taken help from insrtuctor. Thus, for this week simplicity was maintained.

During fifth week, each team member was working with the technology they have chosen. We have started programming what we have designed. This is how the team is following simplicity. 

During week six, the team managed to meet once. And all the team members have given proper illustration about their work into the project. As the load is getting heavier from week to week,the team is diligently working on the project. We have decided to make the code as simple and possible, and also we have developed habit of writing "clean code", so that every member can understand everyone's work.

During the seventh week, we discussed about database deployment stratergy and tried to create same naming model so that referencing will be easier and will not create hazardous situation during the integration phase.

During last week of project, we focused on integration. During integration, as mentioned above we wrote clean code, so this final step became really simple.
